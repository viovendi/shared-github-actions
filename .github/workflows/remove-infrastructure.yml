name: Remove infrastructure

on:
  workflow_call:
    inputs:
      microservice-name:
        description: Microservice short name
        type: string
        required: true
      environment:
        description: Environment
        type: string
        required: true
      cf-stack-name-suffix:
        description: CloudFormation stack name suffix with trailing '-' (e.g. -database)
        type: string
        required: false
        default: ''
      aws-region:
        description: AWS region
        type: string
        required: false
        default: eu-central-1

jobs:
  remove-infrastructure:
    name: Remove infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws-region }}

      - name: Remove infrastructure
        timeout-minutes: 15
        shell: bash
        run: |
          if [[ "${{ inputs.environment }}" =~ ^staging[1-8]$ ]]; 
          then
            aws cloudformation delete-stack --stack-name ${{ format('{0}-{1}{2}', inputs.microservice-name, inputs.environment, inputs.cf-stack-name-suffix) }}
            aws cloudformation wait stack-delete-complete --stack-name ${{ format('{0}-{1}{2}', inputs.microservice-name, inputs.environment, inputs.cf-stack-name-suffix) }}
            exit 0
          elif [[ "${{ inputs.environment }}" =~ ^production[1-3]$ ]]; 
          then
            echo "Production infrastructure can not be removed. To allow production infrastructure removal, change the condition temporarily."
            exit 1
          else
            echo "Unrecognizable environment name"
            exit 1
          fi
      
      - name: Describe infrastructure events
        if: failure()
        uses: viovendi/shared-github-actions/describe-infrastructure-events@master
        with:
          microservice-name: ${{ inputs.microservice-name }}
          environment: ${{ inputs.environment }}
          cf-stack-name-suffix: ${{ inputs.cf-stack-name-suffix }}
      
