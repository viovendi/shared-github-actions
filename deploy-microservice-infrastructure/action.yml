name: Deploy microservice infrastructure
inputs:
  microservice-name:
    description: Microservice short name
    required: true
  environment:
    description: Environment
    required: true
  cf-stack-name-suffix:
    description: CloudFormation stack name suffix with trailing '-' (e.g. -database)
    required: false
    default: ''
  ecr-repository:
    description: ECR repository
    required: true
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get current commit hash
      id: get-current-commit-hash
      uses: viovendi/shared-github-actions/get-current-commit-hash@master

    - name: Check if the image exists
      shell: bash
      run: |
        aws ecr describe-images \
          --repository-name ${{ inputs.ecr-repository }} \
          --image-ids imageTag=${{ steps.get-current-commit-hash.outputs.commit-hash }}

    - name: Deploy infrastructure
      uses: viovendi/shared-github-actions/deploy-infrastructure@master
      with:
        microservice-name: ${{ inputs.microservice-name }}
        environment: ${{ inputs.environment }}
        cf-stack-name-suffix: ${{ inputs.cf-stack-name-suffix }}
        cf-parameters: ImageTag=${{ steps.get-current-commit-hash.outputs.commit-hash }}

    - name: Create release tag
      uses: actions/github-script@v5
      with:
        script: |
          const tagName = 'release_microservice_' + Date.now();

          const tagResult = await github.rest.git.createTag({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag: tagName,
            message: 'Create a release tag on the commit after successful deployment from the master branch',
            object: '${{ steps.get-current-commit-hash.outputs.commit-hash }}',
            type: 'commit'
          });

          console.log(JSON.stringify(tagResult));

          if (tagResult.status !== 201) {
            core.setFailed(`The tag creation is failed`);
            return;
          }

          // From GitHub API docs: 
          // Note that creating a tag object does not create the reference that makes a tag in Git. 
          // If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then create the refs/tags/[tag] reference.
          const referenceResult = await github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/tags/${tagName}`,
            sha: '${{ steps.get-current-commit-hash.outputs.commit-hash }}'
          });
          
          console.log(JSON.stringify(referenceResult));

          if (referenceResult.status !== 201) {
            core.setFailed(`The reference creation is failed`);
            return;
          }

